//https://codeforces.com/contest/2008/problem/D
import java.util.*;
import java.io.*;

public class Pruebas {
    static int[] ans;
    static boolean[] state;
    static int[] arr;
    static int[] index;
    static int nodes;
    public static void main(String[] args) {
        Scanner sc = new Scanner();
        PrintWriter pw=new PrintWriter(System.out);
        int ti=sc.nextInt();
        for (int times = 0; times < ti; times++) {
            int n=sc.nextInt();
            arr=new int[n];
            index=new int[n];
            nodes=0;
            ans=new int[n];
            state=new boolean[n];
            for (int i = 0; i < n; i++)
                arr[i]=sc.nextInt();
            String s=sc.next();
            for (int i = 0; i < n; i++) {
                if(nodes==n)
                    break;
                if(!state[i])
                    bfs(i,s);
            }
            for(int i:index)
                pw.print(ans[i]+" ");
            pw.println();
        }
        pw.close();
    }
    static void bfs(int s,String t){
        state[s]=true;
        nodes++;
        int c=0;
        int i=s;
        if(t.charAt(s)=='0')
            c++;
        index[s]=s;
        while (true){
            i=arr[i]-1;
            if(state[i])
                break;
            index[i]=s;
            state[i]=true;
            nodes++;
            if(t.charAt(i)=='0')
                c++;
        }
        ans[s]=c;

    }
    static class Scanner {
        BufferedReader br;
        StringTokenizer st;

        public Scanner() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }
        public boolean ready() throws IOException {
            return br.ready();
        }
        String nextLine() throws IOException {
            return br.readLine();
        }

        String next() {
            while (st == null || !st.hasMoreTokens()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        double nextDouble(){
            return Double.parseDouble(next());
        }

        int nextInt() {
            return Integer.parseInt(next());
        }
        char nextChar() throws IOException {
            return (char) br.read();
        }

    }
}
